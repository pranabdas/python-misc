(self.webpackChunkpython_tutorial=self.webpackChunkpython_tutorial||[]).push([[222],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return o},kt:function(){return c}});var n=a(7294);function u(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){u(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,u=function(e,t){if(null==e)return{};var a,n,u={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(u[a]=e[a]);return u}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(u[a]=e[a])}return u}var i=n.createContext({}),s=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},o=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,u=e.mdxType,l=e.originalType,i=e.parentName,o=r(e,["components","mdxType","originalType","parentName"]),d=s(a),c=u,k=d["".concat(i,".").concat(c)]||d[c]||m[c]||l;return a?n.createElement(k,p(p({ref:t},o),{},{components:a})):n.createElement(k,p({ref:t},o))}));function c(e,t){var a=arguments,u=t&&t.mdxType;if("string"==typeof e||u){var l=a.length,p=new Array(l);p[0]=d;var r={};for(var i in t)hasOwnProperty.call(t,i)&&(r[i]=t[i]);r.originalType=e,r.mdxType="string"==typeof e?e:u,p[1]=r;for(var s=2;s<l;s++)p[s]=a[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8215:function(e,t,a){"use strict";var n=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,u=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:u},t)}},5064:function(e,t,a){"use strict";a.d(t,{Z:function(){return m}});var n=a(7294),u=a(9443);var l=function(){var e=(0,n.useContext)(u.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},p=a(6010),r="tabItem_1uMI",i="tabItemActive_2DSg";var s=37,o=39;var m=function(e){var t=e.lazy,a=e.block,u=e.defaultValue,m=e.values,d=e.groupId,c=e.className,k=l(),v=k.tabGroupChoices,y=k.setTabGroupChoices,b=(0,n.useState)(u),h=b[0],g=b[1],T=n.Children.toArray(e.children),N=[];if(null!=d){var f=v[d];null!=f&&f!==h&&m.some((function(e){return e.value===f}))&&g(f)}var x=function(e){var t=e.currentTarget,a=N.indexOf(t),n=m[a].value;g(n),null!=d&&(y(d,n),setTimeout((function(){var e,a,n,u,l,p,r,s;(e=t.getBoundingClientRect(),a=e.top,n=e.left,u=e.bottom,l=e.right,p=window,r=p.innerHeight,s=p.innerWidth,a>=0&&l<=s&&u<=r&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(i),setTimeout((function(){return t.classList.remove(i)}),2e3))}),150))},I=function(e){var t,a;switch(e.keyCode){case o:var n=N.indexOf(e.target)+1;a=N[n]||N[0];break;case s:var u=N.indexOf(e.target)-1;a=N[u]||N[N.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":a},c)},m.map((function(e){var t=e.value,a=e.label;return n.createElement("li",{role:"tab",tabIndex:h===t?0:-1,"aria-selected":h===t,className:(0,p.Z)("tabs__item",r,{"tabs__item--active":h===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:I,onFocus:x,onClick:x},a)}))),t?(0,n.cloneElement)(T.filter((function(e){return e.props.value===h}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},T.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==h})}))))}},9443:function(e,t,a){"use strict";var n=(0,a(7294).createContext)(void 0);t.Z=n},6198:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return m},toc:function(){return d},default:function(){return k}});var n=a(2122),u=a(9756),l=(a(7294),a(3905)),p=a(5064),r=a(8215),i=["components"],s={title:"List, tuple, and dictionary",sidebar_label:"List, tuple, dictionary"},o=void 0,m={unversionedId:"basics/list-tuple-dict",id:"basics/list-tuple-dict",isDocsHomePage:!1,title:"List, tuple, and dictionary",description:"List",source:"@site/docs/basics/list-tuple-dict.mdx",sourceDirName:"basics",slug:"/basics/list-tuple-dict",permalink:"/python-tutorial/basics/list-tuple-dict",editUrl:"https://github.com/pranabdas/python-tutorial/blob/master/docs/basics/list-tuple-dict.mdx",version:"current",frontMatter:{title:"List, tuple, and dictionary",sidebar_label:"List, tuple, dictionary"},sidebar:"docs",previous:{title:"Get started",permalink:"/python-tutorial/basics/gs"},next:{title:"Flow control",permalink:"/python-tutorial/basics/flow-control"}},d=[{value:"List",id:"list",children:[]},{value:"Tuples",id:"tuples",children:[]},{value:"Dictionary",id:"dictionary",children:[]}],c={toc:d};function k(e){var t=e.components,a=(0,u.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"list"},"List"),(0,l.kt)("p",null,"It is a good idea to name lists as plural as they contain multiple elements. Like, ",(0,l.kt)("inlineCode",{parentName:"p"},"names"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"items")," etc."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names = ['Rupal', 'Pranab', 'Bhanu']\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Rupal', 'Pranab', 'Bhanu']\n")))),(0,l.kt)("p",null,"Lists are mutable, we can change its contents:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names[2] = 'Nihit'\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Rupal', 'Pranab', 'Nihit']\n")))),(0,l.kt)("p",null,"Adding new items to the list"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names.append('Bhanu')\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Rupal', 'Pranab', 'Nihit', 'Bhanu']\n")))),(0,l.kt)("p",null,"Inserting item in a specific place."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names.insert(2, 'Nitin')\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Rupal', 'Pranab', 'Nitin', 'Nihit', 'Bhanu']\n")))),(0,l.kt)("p",null,"Deleting items from list."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"del names[1]\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Rupal', 'Nitin', 'Nihit', 'Bhanu']\n")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pop")," method of removing. ",(0,l.kt)("inlineCode",{parentName:"p"},"pop")," let you use the removed item."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"removed_name = names.pop()  # catch the removed item\nprint(names)\nprint(removed_name)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Rupal', 'Nitin', 'Nihit']\nBhanu\n")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pop")," can remove actually any item."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names.pop(1)\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"'Nitin'\n['Rupal', 'Nihit']\n")))),(0,l.kt)("p",null,"Remove an item by its value."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names.remove('Rupal')\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Nihit']\n")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"If there are more than one item with same value, the ",(0,l.kt)("inlineCode",{parentName:"p"},".remove")," method removes\nonly the first occurrence."))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names.append('Rupal')\nnames.append('Nitin')\nnames.append('Nihit')\nnames.append('Bhanu')\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Nihit', 'Rupal', 'Nitin', 'Nihit', 'Bhanu']\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names.remove('Nihit')\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Rupal', 'Nitin', 'Nihit', 'Bhanu']\n")))),(0,l.kt)("p",null,"Sort lists using ",(0,l.kt)("inlineCode",{parentName:"p"},"sorted")," function (it does not change the original list)."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(sorted(names))\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Bhanu', 'Nihit', 'Nitin', 'Rupal']\n")))),(0,l.kt)("p",null,"Sort lists permanently by using ",(0,l.kt)("inlineCode",{parentName:"p"},"sort")," method."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names.sort()\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Bhanu', 'Nihit', 'Nitin', 'Rupal']\n")))),(0,l.kt)("p",null,"Reverse list times using ",(0,l.kt)("inlineCode",{parentName:"p"},".reverse")," method"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names.reverse()\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Rupal', 'Nitin', 'Nihit', 'Bhanu']\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"names[2] = 'nihit'\nnames.sort()\nprint(names)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"['Bhanu', 'Nitin', 'Rupal', 'nihit']\n")))),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Beware of mixinig uppercase and lowercase letters. The methods may not work as\nyou might expect as shown above."))),(0,l.kt)("p",null,"Looping through items of a list:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for name in names:\n    print(name)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"Nitin\nRupal\nnihit\n")))),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"range")," function to create numerical lists."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"nums = list(range(1, 11))\nprint(nums)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"squares = []\nfor num in nums:\n   squares.append(num**2)\n\nfor ii in range(len(nums)):\n   print(nums[ii], '\\t', squares[ii])\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"nums     squares\n1    1\n2    4\n3    9\n4    16\n5    25\n6    36\n7    49\n8    64\n9    81\n10   100\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"even_numbers = list(range(2, 11, 2))\nprint(even_numbers)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[2, 4, 6, 8, 10]\n")))),(0,l.kt)("p",null,"List comprehensions:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"squares = [value**2 for value in range(1, 11)]\nprint(squares)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n")))),(0,l.kt)("h3",{id:"tuples"},"Tuples"),(0,l.kt)("p",null,"Tuples are just like ",(0,l.kt)("em",{parentName:"p"},"lists")," except that they are immutable. However, we can\nupdate the whole tuple instead of individual entries. Here we use parenthesis\ninstead of square bracket to define tuples."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"tup = (1, 2, 3)\ntup[0]\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"1\n")))),(0,l.kt)("p",null,"Reassigning values would result in errors"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"tup[1] = 4 # would result in error\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"TypeError: 'tuple' object does not support item assignment\n")))),(0,l.kt)("p",null,"But we can reassign the whole tuple:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"tup = (2, 3, 4, 5)\nprint(tup)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"(2, 3, 4, 5)\n")))),(0,l.kt)("h3",{id:"dictionary"},"Dictionary"),(0,l.kt)("p",null,"Python dictionary are list of key value pairs."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_dict = {'Pranab' : 185, 'Sasha' : 196};\nprint(my_dict)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"{'Pranab': 185, 'Sasha': 196}\n")))),(0,l.kt)("p",null,"You can get values by using it's key:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_dict['Pranab']\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"185\n")))),(0,l.kt)("p",null,"Adding new items to the dictionary:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_dict['Luis'] = 190;\nprint(my_dict)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"{'Pranab': 185, 'Sasha': 196, 'Luis': 190}\n")))),(0,l.kt)("p",null,"Reassign values:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_dict['Luis'] = 191;\nprint(my_dict)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"{'Pranab': 185, 'Sasha': 196, 'Luis': 191}\n")))),(0,l.kt)("p",null,"Delete an entry:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"del my_dict['Luis'];\nprint(my_dict)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"{'Pranab': 185, 'Sasha': 196}\n")))),(0,l.kt)("p",null,"Looping through keys and values in a dictionary:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print('Name\\t Height');\nfor key, value in my_dict.items():\n   print(key, '\\t', value);\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"Name     Height\nPranab   185\nSasha    196\n")))),(0,l.kt)("p",null,"Looping through keys:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for key in my_dict.keys():\n    print(key, my_dict[key])\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"Pranab 185\nSasha 196\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"if 'Pranab' in my_dict.keys():\n   print('Hello Pranab, your height is :', my_dict['Pranab'])\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"Hello Pranab, your height is : 185\n")))),(0,l.kt)("p",null,"Similarly we can loop through values also:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_dict.values()\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"dict_values([185, 196])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for value in my_dict.values():\n    print(value)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"185\n196\n")))))}k.isMDXComponent=!0},6010:function(e,t,a){"use strict";function n(e){var t,a,u="";if("string"==typeof e||"number"==typeof e)u+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(u&&(u+=" "),u+=a);else for(t in e)e[t]&&(u&&(u+=" "),u+=t);return u}function u(){for(var e,t,a=0,u="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(u&&(u+=" "),u+=t);return u}a.d(t,{Z:function(){return u}})}}]);