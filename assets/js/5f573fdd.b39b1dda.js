(self.webpackChunkpython_tutorial=self.webpackChunkpython_tutorial||[]).push([[949],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return y},kt:function(){return c}});var n=a(7294);function u(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){u(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,u=function(e,t){if(null==e)return{};var a,n,u={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(u[a]=e[a]);return u}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(u[a]=e[a])}return u}var m=n.createContext({}),o=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},y=function(e){var t=o(e.components);return n.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},i=n.forwardRef((function(e,t){var a=e.components,u=e.mdxType,l=e.originalType,m=e.parentName,y=r(e,["components","mdxType","originalType","parentName"]),i=o(a),c=u,d=i["".concat(m,".").concat(c)]||i[c]||s[c]||l;return a?n.createElement(d,p(p({ref:t},y),{},{components:a})):n.createElement(d,p({ref:t},y))}));function c(e,t){var a=arguments,u=t&&t.mdxType;if("string"==typeof e||u){var l=a.length,p=new Array(l);p[0]=i;var r={};for(var m in t)hasOwnProperty.call(t,m)&&(r[m]=t[m]);r.originalType=e,r.mdxType="string"==typeof e?e:u,p[1]=r;for(var o=2;o<l;o++)p[o]=a[o];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}i.displayName="MDXCreateElement"},8215:function(e,t,a){"use strict";var n=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,u=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:u},t)}},5064:function(e,t,a){"use strict";a.d(t,{Z:function(){return s}});var n=a(7294),u=a(9443);var l=function(){var e=(0,n.useContext)(u.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},p=a(6010),r="tabItem_1uMI",m="tabItemActive_2DSg";var o=37,y=39;var s=function(e){var t=e.lazy,a=e.block,u=e.defaultValue,s=e.values,i=e.groupId,c=e.className,d=l(),k=d.tabGroupChoices,b=d.setTabGroupChoices,v=(0,n.useState)(u),T=v[0],g=v[1],N=n.Children.toArray(e.children),f=[];if(null!=i){var x=k[i];null!=x&&x!==T&&s.some((function(e){return e.value===x}))&&g(x)}var h=function(e){var t=e.currentTarget,a=f.indexOf(t),n=s[a].value;g(n),null!=i&&(b(i,n),setTimeout((function(){var e,a,n,u,l,p,r,o;(e=t.getBoundingClientRect(),a=e.top,n=e.left,u=e.bottom,l=e.right,p=window,r=p.innerHeight,o=p.innerWidth,a>=0&&l<=o&&u<=r&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(m),setTimeout((function(){return t.classList.remove(m)}),2e3))}),150))},I=function(e){var t,a;switch(e.keyCode){case y:var n=f.indexOf(e.target)+1;a=f[n]||f[0];break;case o:var u=f.indexOf(e.target)-1;a=f[u]||f[f.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":a},c)},s.map((function(e){var t=e.value,a=e.label;return n.createElement("li",{role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,className:(0,p.Z)("tabs__item",r,{"tabs__item--active":T===t}),key:t,ref:function(e){return f.push(e)},onKeyDown:I,onFocus:h,onClick:h},a)}))),t?(0,n.cloneElement)(N.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},N.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}},9443:function(e,t,a){"use strict";var n=(0,a(7294).createContext)(void 0);t.Z=n},1405:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return y},metadata:function(){return s},toc:function(){return i},default:function(){return d}});var n=a(2122),u=a(9756),l=(a(7294),a(3905)),p=a(5064),r=a(8215),m=["components"],o={title:"Numerical operations using numpy",sidebar_label:"Numerical operations"},y=void 0,s={unversionedId:"numpy/numpy-basics",id:"numpy/numpy-basics",isDocsHomePage:!1,title:"Numerical operations using numpy",description:"Creating numpy array:",source:"@site/docs/numpy/numpy-basics.mdx",sourceDirName:"numpy",slug:"/numpy/numpy-basics",permalink:"/python-tutorial/numpy/numpy-basics",editUrl:"https://github.com/pranabdas/python-tutorial/blob/master/docs/numpy/numpy-basics.mdx",version:"current",frontMatter:{title:"Numerical operations using numpy",sidebar_label:"Numerical operations"},sidebar:"docs",previous:{title:"Custom colormap",permalink:"/python-tutorial/matplotlib/custom-colormap"},next:{title:"Linear algebra",permalink:"/python-tutorial/numpy/linear-algebra"}},i=[],c={toc:i};function d(e){var t=e.components,a=(0,u.Z)(e,m);return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Creating ",(0,l.kt)("inlineCode",{parentName:"p"},"numpy")," array:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nmy_array = np.array([1, 3, 4])\nprint(my_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[1 3 4]\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"type(my_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"numpy.ndarray\n")))),(0,l.kt)("p",null,"Create a two-dimensional array/matrix:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array2 = np.array([[1, 2, 4], [3, 1, 5]])\nprint(my_array2)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[1 2 4]\n [3 1 5]]\n")))),(0,l.kt)("p",null,"Check dimension of an array:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array2.ndim\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"2\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array2.shape\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"(2, 3)\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array2.size\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"6\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array2.dtype\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"dtype('int64')\n")))),(0,l.kt)("p",null,"We can specify the dtype explicitly if you need to."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array3 = np.array([[1, 4, 7], [1, 9, 32]], dtype=np.float64)\nmy_array3.dtype\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"dtype('float64')\n")))),(0,l.kt)("p",null,"We can switch type of an existing array:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array3.astype(np.int64)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[ 1,  4,  7],\n       [ 1,  9, 32]])\n")))),(0,l.kt)("p",null,"Alternative way:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array3 = np.array(my_array3, dtype=np.float64)\nprint(my_array3)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[ 1.  4.  7.]\n [ 1.  9. 32.]]\n")))),(0,l.kt)("p",null,"Creating zero matrices:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_zero_array = np.zeros((2, 3))\nprint(my_zero_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[0. 0. 0.]\n [0. 0. 0.]]\n")))),(0,l.kt)("p",null,"Matrix of ones:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_ones_array = np.ones((2, 3))\nprint(my_ones_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[1. 1. 1.]\n [1. 1. 1.]]\n")))),(0,l.kt)("p",null,"If we need to fill the matrix with some other constant, we can first create\nones_matrix and multiply. However there is another function to do the same."),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_const_array = np.full([2, 3], 5)\nprint(my_const_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[5 5 5]\n [5 5 5]]\n")))),(0,l.kt)("p",null,"Create arrays with incremental sequences:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array4 = np.arange(1, 10, 2)\nprint(my_array4)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[1 3 5 7 9]\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array5 = np.linspace(1, 10, 10)\nprint(my_array5)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]\n")))),(0,l.kt)("p",null,"Create meshgrid:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"x = np.array([-1, 0, 1])\ny = np.array([-2, 0, 2])\n\nX, Y = np.meshgrid(x, y)\nprint(X, '\\n\\n', Y)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[-1  0  1]\n [-1  0  1]\n [-1  0  1]]\n\n [[-2 -2 -2]\n [ 0  0  0]\n [ 2  2  2]]\n")))),(0,l.kt)("p",null,"Other useful matrices:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.identity(4)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[1., 0., 0., 0.],\n       [0., 1., 0., 0.],\n       [0., 0., 1., 0.],\n       [0., 0., 0., 1.]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.eye(4)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[1., 0., 0., 0.],\n       [0., 1., 0., 0.],\n       [0., 0., 1., 0.],\n       [0., 0., 0., 1.]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.eye(4, k=1)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[0., 1., 0., 0.],\n       [0., 0., 1., 0.],\n       [0., 0., 0., 1.],\n       [0., 0., 0., 0.]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.eye(4, k=-1)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[0., 0., 0., 0.],\n       [1., 0., 0., 0.],\n       [0., 1., 0., 0.],\n       [0., 0., 1., 0.]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.diag(np.arange(0, 20, 5))\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[ 0,  0,  0,  0],\n       [ 0,  5,  0,  0],\n       [ 0,  0, 10,  0],\n       [ 0,  0,  0, 15]])\n")))),(0,l.kt)("p",null,"Create random matrix:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.random.rand(3)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([0.49067738, 0.79451961, 0.87339187])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.random.rand(2, 3)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[0.858099  , 0.86235168, 0.48305685],\n       [0.23118357, 0.87312982, 0.1940535 ]])\n")))),(0,l.kt)("p",null,"Normally distributed random numbers:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array_10 = np.random.randn(5); my_array_10\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([ 0.55956033, -0.37623696,  1.78995147,  0.05591339, -0.43796257])\n")))),(0,l.kt)("p",null,"Expand matrix with ",(0,l.kt)("inlineCode",{parentName:"p"},"numpy.tile()"),":"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array_11 = np.array([[1, 3], [2, 5]]); my_array_11\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[1, 3],\n       [2, 5]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array_12 = np.tile(my_array_11, 2); my_array_12\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[1, 3, 1, 3],\n       [2, 5, 2, 5]])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array_12 = np.tile(my_array_11, (3, 2)); my_array_12\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([[1, 3, 1, 3],\n       [2, 5, 2, 5],\n       [1, 3, 1, 3],\n       [2, 5, 2, 5],\n       [1, 3, 1, 3],\n       [2, 5, 2, 5]])\n")))),(0,l.kt)("p",null,"Indexing and slicing matrix:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array = np.arange(5); my_array\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([0, 1, 2, 3, 4])\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(my_array[0], my_array[-1])\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"0 4\n")))),(0,l.kt)("p",null,"Reversing an array:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array[::-1]\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([4, 3, 2, 1, 0])\n")))),(0,l.kt)("p",null,"Indexing in higher dimensional array:"),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array = np.array([[1, 3, 2], [1, 4, 2], [5, 3, 1]]); print(my_array)\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"[[1 3 2]\n [1 4 2]\n [5 3 1]]\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array[2, 1]\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"3\n")))),(0,l.kt)(p.Z,{defaultValue:"input",values:[{label:"Input",value:"input"},{label:"Output",value:"output"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"input",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_array[2, :]\n"))),(0,l.kt)(r.Z,{value:"output",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array([5, 3, 1])\n")))))}d.isMDXComponent=!0},6010:function(e,t,a){"use strict";function n(e){var t,a,u="";if("string"==typeof e||"number"==typeof e)u+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(u&&(u+=" "),u+=a);else for(t in e)e[t]&&(u&&(u+=" "),u+=t);return u}function u(){for(var e,t,a=0,u="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(u&&(u+=" "),u+=t);return u}a.d(t,{Z:function(){return u}})}}]);