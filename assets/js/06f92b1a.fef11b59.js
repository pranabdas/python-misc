(self.webpackChunkpython_tutorial=self.webpackChunkpython_tutorial||[]).push([[405],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var p=a.createContext({}),s=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=s(t.components);return a.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,p=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),u=s(n),d=l,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||r;return n?a.createElement(f,o(o({ref:e},c),{},{components:n})):a.createElement(f,o({ref:e},c))}));function d(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,o=new Array(r);o[0]=u;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:l,o[1]=i;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8926:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var a=n(2122),l=n(9756),r=(n(7294),n(3905)),o=["components"],i={title:"Basic matplotlib plotting",sidebar_label:"Basic plotting"},p=void 0,s={unversionedId:"matplotlib/basic-plotting",id:"matplotlib/basic-plotting",isDocsHomePage:!1,title:"Basic matplotlib plotting",description:"matplotlib is a python graphical package to perform simple and advanced visual",source:"@site/docs/matplotlib/basic-plotting.md",sourceDirName:"matplotlib",slug:"/matplotlib/basic-plotting",permalink:"/python-tutorial/matplotlib/basic-plotting",editUrl:"https://github.com/pranabdas/python-tutorial/blob/master/docs/matplotlib/basic-plotting.md",version:"current",frontMatter:{title:"Basic matplotlib plotting",sidebar_label:"Basic plotting"},sidebar:"docs",previous:{title:"File read write",permalink:"/python-tutorial/basics/file-io"},next:{title:"Subplot",permalink:"/python-tutorial/matplotlib/subplot"}},c=[{value:"Saving plot to file",id:"saving-plot-to-file",children:[]}],m={toc:c};function u(t){var e=t.components,i=(0,l.Z)(t,o);return(0,r.kt)("wrapper",(0,a.Z)({},m,i,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"matplotlib")," is a python graphical package to perform simple and advanced visual\npresentation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import matplotlib.pyplot as plt\nimport numpy as np\n# In Jupyter notebook to show figure inline\n%matplotlib inline\n# You can try %matplotlib notebook\n\n# some plot configuration\nplt.rcParams["figure.dpi"]=150\nplt.rcParams["figure.facecolor"]="white"\n\n# Let\'s create two one dimensional array using numpy\nx = np.linspace(0, 10, 11)\ny = x**2\n\n# make a x vs. y plot\nplt.plot(x, y)\nplt.show()\n')),(0,r.kt)("p",null,"This produces following output:\n",(0,r.kt)("img",{alt:"x vs. y plot",src:n(2487).Z})),(0,r.kt)("p",null,"Now let's improve the figure a bit. The plt.plot accepts 3 basic arguments in\nthe following order: (x, y, format). This format is a short hand combination of\n",(0,r.kt)("inlineCode",{parentName:"p"},"{color}{marker}{line}"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"plt.plot(x, y, 'ro-')\nplt.show()\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"x vs. y plot",src:n(9333).Z})),(0,r.kt)("p",null,"More customizations:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"plt.figure(figsize = (8, 5))\nplt.plot(x, y, 'ro-', linewidth=1, markersize=3)\nplt.title('My simple plot')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.show()\n")),(0,r.kt)("p",null,"Even more options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"large = 22; med = 16; small = 12\nparams = {'axes.titlesize': large,\n          'legend.fontsize': med,\n          'figure.figsize': (16, 10),\n          'axes.labelsize': med,\n          'axes.titlesize': med,\n          'xtick.labelsize': med,\n          'ytick.labelsize': med,\n          'figure.titlesize': large}\nplt.rcParams.update(params)\n\nplt.figure(figsize = (8, 6), dpi = 300)\nplt.plot(x, y, 'ro-')\nplt.title('My simple plot')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.xlim(0, 10.5)\nplt.ylim(0, 110)\nplt.show()\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Notice that once we update the ",(0,r.kt)("inlineCode",{parentName:"p"},"rcParams"),", the settings persists until we\nrestart the kernel. You can go back to matplotlib defaults by:\n",(0,r.kt)("inlineCode",{parentName:"p"},"plt.rcParams.update(rcParamsDefault)")))),(0,r.kt)("p",null,"How can we append another plot on the same figure?"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"y2 = x**3\nplt.plot(x, y, 'ro-', label='y')\nplt.plot(x, y2, 'g*-', label='y2')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.legend(frameon=False, loc=\"upper center\")\nplt.xlim(1, 10.5)\nplt.ylim(1, 1200)\nplt.show()\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"x vs. y plot",src:n(6766).Z})),(0,r.kt)("h3",{id:"saving-plot-to-file"},"Saving plot to file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"x = np.linspace(0, 2*np.pi, 100)\ny = np.sin(x)\nplt.plot(x, y)\nplt.savefig('fig1.pdf')\nplt.show()\n")),(0,r.kt)("p",null,"Now visit ",(0,r.kt)("a",{parentName:"p",href:"https://matplotlib.org"},"https://matplotlib.org")," and explore yourself."))}u.isMDXComponent=!0},9333:function(t,e,n){"use strict";e.Z=n.p+"assets/images/mpl-x-vs-y-2-f898a6cecd0ed9fe27da55d2a190811c.png"},6766:function(t,e,n){"use strict";e.Z=n.p+"assets/images/mpl-x-vs-y-3-bf28d444045b3a1106bc9fa69d479d17.png"},2487:function(t,e,n){"use strict";e.Z=n.p+"assets/images/mpl-x-vs-y-ff2c03d84e11286a3a1003c53cde7bee.png"}}]);